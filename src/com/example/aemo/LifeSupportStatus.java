//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.08 at 12:34:41 PM AEST 
//


package com.example.aemo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * &lt;p&gt;Java class for LifeSupportStatus.
 * 
 * &lt;p&gt;The following schema fragment specifies the expected content contained within this class.
 * &lt;pre&gt;
 * &amp;lt;simpleType name="LifeSupportStatus"&amp;gt;
 *   &amp;lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&amp;gt;
 *     &amp;lt;enumeration value="Registered - No Medical Confirmation"/&amp;gt;
 *     &amp;lt;enumeration value="Registered - Medical Confirmation"/&amp;gt;
 *     &amp;lt;enumeration value="Deregistered - No Medical Confirmation"/&amp;gt;
 *     &amp;lt;enumeration value="Deregistered - Customer Advice"/&amp;gt;
 *     &amp;lt;enumeration value="Deregistered - No Customer Response"/&amp;gt;
 *     &amp;lt;enumeration value="None"/&amp;gt;
 *   &amp;lt;/restriction&amp;gt;
 * &amp;lt;/simpleType&amp;gt;
 * &lt;/pre&gt;
 * 
 */
@XmlType(name = "LifeSupportStatus")
@XmlEnum
public enum LifeSupportStatus {

    @XmlEnumValue("Registered - No Medical Confirmation")
    REGISTERED_NO_MEDICAL_CONFIRMATION("Registered - No Medical Confirmation"),
    @XmlEnumValue("Registered - Medical Confirmation")
    REGISTERED_MEDICAL_CONFIRMATION("Registered - Medical Confirmation"),
    @XmlEnumValue("Deregistered - No Medical Confirmation")
    DEREGISTERED_NO_MEDICAL_CONFIRMATION("Deregistered - No Medical Confirmation"),
    @XmlEnumValue("Deregistered - Customer Advice")
    DEREGISTERED_CUSTOMER_ADVICE("Deregistered - Customer Advice"),
    @XmlEnumValue("Deregistered - No Customer Response")
    DEREGISTERED_NO_CUSTOMER_RESPONSE("Deregistered - No Customer Response"),
    @XmlEnumValue("None")
    NONE("None");
    private final String value;

    LifeSupportStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LifeSupportStatus fromValue(String v) {
        for (LifeSupportStatus c: LifeSupportStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
