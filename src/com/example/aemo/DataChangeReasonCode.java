//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.08 at 12:34:41 PM AEST 
//


package com.example.aemo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * &lt;p&gt;Java class for DataChangeReasonCode.
 * 
 * &lt;p&gt;The following schema fragment specifies the expected content contained within this class.
 * &lt;pre&gt;
 * &amp;lt;simpleType name="DataChangeReasonCode"&amp;gt;
 *   &amp;lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&amp;gt;
 *     &amp;lt;maxLength value="6"/&amp;gt;
 *     &amp;lt;enumeration value="DCR001"/&amp;gt;
 *     &amp;lt;enumeration value="DCR002"/&amp;gt;
 *     &amp;lt;enumeration value="DCR003"/&amp;gt;
 *     &amp;lt;enumeration value="DCR004"/&amp;gt;
 *     &amp;lt;enumeration value="DCR005"/&amp;gt;
 *     &amp;lt;enumeration value="DCR006"/&amp;gt;
 *     &amp;lt;enumeration value="DCR007"/&amp;gt;
 *     &amp;lt;enumeration value="DCR008"/&amp;gt;
 *   &amp;lt;/restriction&amp;gt;
 * &amp;lt;/simpleType&amp;gt;
 * &lt;/pre&gt;
 * 
 */
@XmlType(name = "DataChangeReasonCode")
@XmlEnum
public enum DataChangeReasonCode {

    @XmlEnumValue("DCR001")
    DCR_001("DCR001"),
    @XmlEnumValue("DCR002")
    DCR_002("DCR002"),
    @XmlEnumValue("DCR003")
    DCR_003("DCR003"),
    @XmlEnumValue("DCR004")
    DCR_004("DCR004"),
    @XmlEnumValue("DCR005")
    DCR_005("DCR005"),
    @XmlEnumValue("DCR006")
    DCR_006("DCR006"),
    @XmlEnumValue("DCR007")
    DCR_007("DCR007"),
    @XmlEnumValue("DCR008")
    DCR_008("DCR008");
    private final String value;

    DataChangeReasonCode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DataChangeReasonCode fromValue(String v) {
        for (DataChangeReasonCode c: DataChangeReasonCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
