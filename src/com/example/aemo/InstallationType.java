//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.08 at 12:34:41 PM AEST 
//


package com.example.aemo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * &lt;p&gt;Java class for InstallationType.
 * 
 * &lt;p&gt;The following schema fragment specifies the expected content contained within this class.
 * &lt;pre&gt;
 * &amp;lt;simpleType name="InstallationType"&amp;gt;
 *   &amp;lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&amp;gt;
 *     &amp;lt;enumeration value="Underground"/&amp;gt;
 *     &amp;lt;enumeration value="Overhead"/&amp;gt;
 *     &amp;lt;enumeration value="Underground To Overhead Mains"/&amp;gt;
 *     &amp;lt;enumeration value="Overhead To Underground Mains"/&amp;gt;
 *     &amp;lt;enumeration value="Transformer Overhead"/&amp;gt;
 *     &amp;lt;enumeration value="Transformer Ground Level"/&amp;gt;
 *   &amp;lt;/restriction&amp;gt;
 * &amp;lt;/simpleType&amp;gt;
 * &lt;/pre&gt;
 * 
 */
@XmlType(name = "InstallationType")
@XmlEnum
public enum InstallationType {

    @XmlEnumValue("Underground")
    UNDERGROUND("Underground"),
    @XmlEnumValue("Overhead")
    OVERHEAD("Overhead"),
    @XmlEnumValue("Underground To Overhead Mains")
    UNDERGROUND_TO_OVERHEAD_MAINS("Underground To Overhead Mains"),
    @XmlEnumValue("Overhead To Underground Mains")
    OVERHEAD_TO_UNDERGROUND_MAINS("Overhead To Underground Mains"),
    @XmlEnumValue("Transformer Overhead")
    TRANSFORMER_OVERHEAD("Transformer Overhead"),
    @XmlEnumValue("Transformer Ground Level")
    TRANSFORMER_GROUND_LEVEL("Transformer Ground Level");
    private final String value;

    InstallationType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InstallationType fromValue(String v) {
        for (InstallationType c: InstallationType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
