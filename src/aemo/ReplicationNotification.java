//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.08 at 12:34:41 PM AEST 
//


package aemo;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * Application - Table Replication
 * TransactionExchange - Replication Notification, Replication Request
 * TransactionGroup - Multiple
 * Priority - Low
 * Purpose - Provide portions of one or more tables
 * Detail - Where the notification is the result of a replication request, only data for one table will be present. Where the notification is carrying unsolicited updates, data from multiple tables may be present. If replication parameters are provided, at least one Event element must be present in the response to indicate the success or otherwise of the request.
 * 
 * 			
 * 
 * &lt;p&gt;Java class for ReplicationNotification complex type.
 * 
 * &lt;p&gt;The following schema fragment specifies the expected content contained within this class.
 * 
 * &lt;pre&gt;
 * &amp;lt;complexType name="ReplicationNotification"&amp;gt;
 *   &amp;lt;complexContent&amp;gt;
 *     &amp;lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&amp;gt;
 *       &amp;lt;sequence&amp;gt;
 *         &amp;lt;element name="ReplicationParameters" type="{urn:aseXML:r38}ReplicationParameters" minOccurs="0"/&amp;gt;
 *         &amp;lt;element name="ReplicationBlock" type="{urn:aseXML:r38}ReplicationBlock" maxOccurs="unbounded" minOccurs="0"/&amp;gt;
 *         &amp;lt;element name="Event" type="{urn:aseXML:r38}Event" maxOccurs="unbounded" minOccurs="0"/&amp;gt;
 *       &amp;lt;/sequence&amp;gt;
 *       &amp;lt;attribute name="version" type="{urn:aseXML:r38}r10" default="r10" /&amp;gt;
 *     &amp;lt;/restriction&amp;gt;
 *   &amp;lt;/complexContent&amp;gt;
 * &amp;lt;/complexType&amp;gt;
 * &lt;/pre&gt;
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReplicationNotification", propOrder = {
    "replicationParameters",
    "replicationBlock",
    "event"
})
public class ReplicationNotification {

    @XmlElement(name = "ReplicationParameters")
    protected ReplicationParameters replicationParameters;
    @XmlElement(name = "ReplicationBlock")
    protected List<ReplicationBlock> replicationBlock;
    @XmlElement(name = "Event")
    protected List<Event> event;
    @XmlAttribute(name = "version")
    protected R10 version;

    /**
     * Gets the value of the replicationParameters property.
     * 
     * @return
     *     possible object is
     *     {@link ReplicationParameters }
     *     
     */
    public ReplicationParameters getReplicationParameters() {
        return replicationParameters;
    }

    /**
     * Sets the value of the replicationParameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReplicationParameters }
     *     
     */
    public void setReplicationParameters(ReplicationParameters value) {
        this.replicationParameters = value;
    }

    /**
     * Gets the value of the replicationBlock property.
     * 
     * &lt;p&gt;
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a &lt;CODE&gt;set&lt;/CODE&gt; method for the replicationBlock property.
     * 
     * &lt;p&gt;
     * For example, to add a new item, do as follows:
     * &lt;pre&gt;
     *    getReplicationBlock().add(newItem);
     * &lt;/pre&gt;
     * 
     * 
     * &lt;p&gt;
     * Objects of the following type(s) are allowed in the list
     * {@link ReplicationBlock }
     * 
     * 
     */
    public List<ReplicationBlock> getReplicationBlock() {
        if (replicationBlock == null) {
            replicationBlock = new ArrayList<ReplicationBlock>();
        }
        return this.replicationBlock;
    }

    /**
     * Gets the value of the event property.
     * 
     * &lt;p&gt;
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a &lt;CODE&gt;set&lt;/CODE&gt; method for the event property.
     * 
     * &lt;p&gt;
     * For example, to add a new item, do as follows:
     * &lt;pre&gt;
     *    getEvent().add(newItem);
     * &lt;/pre&gt;
     * 
     * 
     * &lt;p&gt;
     * Objects of the following type(s) are allowed in the list
     * {@link Event }
     * 
     * 
     */
    public List<Event> getEvent() {
        if (event == null) {
            event = new ArrayList<Event>();
        }
        return this.event;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link R10 }
     *     
     */
    public R10 getVersion() {
        if (version == null) {
            return R10 .R_10;
        } else {
            return version;
        }
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link R10 }
     *     
     */
    public void setVersion(R10 value) {
        this.version = value;
    }

}
