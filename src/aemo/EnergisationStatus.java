//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.08 at 12:34:41 PM AEST 
//


package aemo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * &lt;p&gt;Java class for EnergisationStatus.
 * 
 * &lt;p&gt;The following schema fragment specifies the expected content contained within this class.
 * &lt;pre&gt;
 * &amp;lt;simpleType name="EnergisationStatus"&amp;gt;
 *   &amp;lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&amp;gt;
 *     &amp;lt;maxLength value="30"/&amp;gt;
 *     &amp;lt;enumeration value="Active"/&amp;gt;
 *     &amp;lt;enumeration value="Not Connected"/&amp;gt;
 *     &amp;lt;enumeration value="Deenergised Before Meter"/&amp;gt;
 *     &amp;lt;enumeration value="Deenergised At Meter"/&amp;gt;
 *     &amp;lt;enumeration value="Deenergised After Meter"/&amp;gt;
 *   &amp;lt;/restriction&amp;gt;
 * &amp;lt;/simpleType&amp;gt;
 * &lt;/pre&gt;
 * 
 */
@XmlType(name = "EnergisationStatus")
@XmlEnum
public enum EnergisationStatus {

    @XmlEnumValue("Active")
    ACTIVE("Active"),
    @XmlEnumValue("Not Connected")
    NOT_CONNECTED("Not Connected"),
    @XmlEnumValue("Deenergised Before Meter")
    DEENERGISED_BEFORE_METER("Deenergised Before Meter"),
    @XmlEnumValue("Deenergised At Meter")
    DEENERGISED_AT_METER("Deenergised At Meter"),
    @XmlEnumValue("Deenergised After Meter")
    DEENERGISED_AFTER_METER("Deenergised After Meter");
    private final String value;

    EnergisationStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EnergisationStatus fromValue(String v) {
        for (EnergisationStatus c: EnergisationStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
