//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.08 at 12:34:41 PM AEST 
//


package aemo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * &lt;p&gt;Java class for NotificationStatus.
 * 
 * &lt;p&gt;The following schema fragment specifies the expected content contained within this class.
 * &lt;pre&gt;
 * &amp;lt;simpleType name="NotificationStatus"&amp;gt;
 *   &amp;lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&amp;gt;
 *     &amp;lt;maxLength value="30"/&amp;gt;
 *     &amp;lt;enumeration value="SO Requested"/&amp;gt;
 *     &amp;lt;enumeration value="SO Rejected"/&amp;gt;
 *     &amp;lt;enumeration value="SO Completion"/&amp;gt;
 *     &amp;lt;enumeration value="Accepted by Notified Party"/&amp;gt;
 *     &amp;lt;enumeration value="Rejection by Notified Party"/&amp;gt;
 *     &amp;lt;enumeration value="Notified Party Stopped"/&amp;gt;
 *   &amp;lt;/restriction&amp;gt;
 * &amp;lt;/simpleType&amp;gt;
 * &lt;/pre&gt;
 * 
 */
@XmlType(name = "NotificationStatus")
@XmlEnum
public enum NotificationStatus {

    @XmlEnumValue("SO Requested")
    SO_REQUESTED("SO Requested"),
    @XmlEnumValue("SO Rejected")
    SO_REJECTED("SO Rejected"),
    @XmlEnumValue("SO Completion")
    SO_COMPLETION("SO Completion"),
    @XmlEnumValue("Accepted by Notified Party")
    ACCEPTED_BY_NOTIFIED_PARTY("Accepted by Notified Party"),
    @XmlEnumValue("Rejection by Notified Party")
    REJECTION_BY_NOTIFIED_PARTY("Rejection by Notified Party"),
    @XmlEnumValue("Notified Party Stopped")
    NOTIFIED_PARTY_STOPPED("Notified Party Stopped");
    private final String value;

    NotificationStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NotificationStatus fromValue(String v) {
        for (NotificationStatus c: NotificationStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
